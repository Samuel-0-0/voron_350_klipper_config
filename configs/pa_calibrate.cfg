# 在切片软件的开始G-CODE的PRINT_START后增加
# CURA 5.0
# FILAMENT={material_type}

# SuperSlicer
# FILAMENT=[filament_type]

# PrusaSlicer
# FILAMENT=[filament_type]


### 根据耗材切换PA值
# 将PA_CAL宏测试的最优值填入下方对应的项目内
[gcode_macro MATERIAL_PA]
# 使用方法：在PRINT_START宏内填入下方2行内容
# {% set FILAMENT_TYPE = params.FILAMENT|default("PLA")|string %}
# MATERIAL_PA MATERIAL={FILAMENT_TYPE}
gcode:
    {% set material = params.MATERIAL|default("PLA")|string %}
    {% if material == "ABS" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.055
        SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    {% elif material == "ASA" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.045
        SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    {% elif material == "PLA" %}
        #SET_PRESSURE_ADVANCE ADVANCE=0.0425
        SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    {% elif material == "PET" %}
        #SET_PRESSURE_ADVANCE ADVANCE=0.0550
        SET_RETRACTION RETRACT_LENGTH=0.6 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=20
     {% endif %}


### 默认的PA测试预设参数，根据需要修改
[gcode_macro _PA_CAL_VARIABLES]
variable_pa_extruder_temp:         250              ; default extruder temperature
variable_pa_bed_temp:              110              ; default bed temperature
variable_pa_chamber_temp:            0              ; default chamber temperature (0 to disable)
variable_pa_layer_height:            0.30 ;mm       ; pa test layer height
variable_pa_start:                   0.0            ; starting pressure advance value to test (typically 0)
variable_pa_stop:                    0.1            ; ending pressure advance value to test (0.1 for direct drive, 1.0+ for bowden)
variable_pa_steps:                  20              ; number of test lines to draw
variable_pa_between_lines:           5    ;mm       ; distance between vertical lines in mm (recommended 5mm minimum)
variable_pa_move_speed:            300    ;mm/sec   ; free movement speed in mm/min
variable_pa_slow_length:            20    ;mm       ; slow line segment length (2x per line)
variable_pa_slow_speed:             20    ;mm/sec   ; slow segment printing speed
variable_pa_fast_length:            40    ;mm       ; fast line segment length 
variable_pa_fast_speed:            120    ;mm/sec   ; fast segment printing speed
variable_pa_retract_speed:          40    ;mm/sec   ; retraction speed
variable_pa_retract_dist:            0.55 ;mm       ; retraction distance (0 to disable)
variable_pa_z_speed:                10    ;mm/sec   ; z movement speed
variable_pa_accel:                5000    ;mm/sec^2 ; printer acceleration speed
variable_pa_accel_to_decel:       2500    ;mm/sec^2 ; printer accel_to_decel speed (typically half of acceleraton speed)
variable_pa_line_ratio:              1.125          ; line width ratio to nozzle diameter (recommended between 1.05 to 1.25)
variable_pa_extrude_ratio:           0.885          ; filament extrusion ratio (aka flow rate, 1 if unsure)
variable_pa_bold_extrude:            1.1            ; extrusion multiplier for bold lines, such as the frame or underline
variable_pa_enable_frame:            1              ; print the vertical "frame" lines (1 for "yes" or 0 for "no")
variable_pa_enable_markers:          1              ; print vertical frame markers at the speed changes
variable_pa_marker_length:          10    ;mm       ; length of markers
variable_pa_print_values:            1              ; print the pa values after each line
variable_pa_print_height:            4    ;mm       ; font size of printed numbers.
variable_pa_draw_underline:          1              ; draw an underline to connect all printed numbers together for easier removal
variable_pa_underline_overlap:       0.25           ; overlap between numbers and their underline, to ensure solid adhesion
variable_pa_precision:              "%.3f"          ; format string to describe decimal point precision
gcode:

[gcode_macro PA_CAL]
# Klipper压力提前画线测试宏
# 使用方法：PA_CAL BED=100 EXTRUDER=240 PA_START=0.0 PA_STOP=0.1 PA_STEPS=20 NOZZLE=0.4
# 也可以不带参数执行，会自动调用printer.cfg和_PA_CAL_VARIABLES预设的参数

# Based on http://realdeuce.github.io/Voron/PA/pressure_advance.html
# Sourced from u/Deepsiks, assisted by u/imoftendisgruntled, u/scul86, and thanks to u/beansisfat, u/stray_r
# Cleaned up and moved to using saved_variables.cfg by u/jibbsisme
# Fully parameterized and extended by u/ksanislo

description: Tune Pressure Advance
gcode:

  {% set svv = printer["gcode_macro _PA_CAL_VARIABLES"] %}

  # macro parameters
  {% set BED = params.BED|default(svv.pa_bed_temp)|int %}
  {% set CHAMBER = params.CHAMBER|default(svv.pa_chamber_temp)|int %}
  {% set EXTRUDER = params.EXTRUDER|default(svv.pa_extruder_temp)|int %}
  {% set PA_START = params.PA_START|default(svv.pa_start)|float %}
  {% set PA_STOP = params.PA_STOP|default(svv.pa_stop)|float %}
  {% set PA_STEPS = params.PA_STEPS|default(svv.pa_steps)|int %}
  {% set NOZZLE = params.NOZZLE|default(printer.configfile.config["extruder"]["nozzle_diameter"])|float %}

  # load variables
  {% set FD = printer.configfile.config["extruder"]["filament_diameter"]|float %}
  {% set AR = svv.pa_accel|default(3000) %}
  {% set DR = svv.pa_accel_to_decel|default(1500) %}
  {% set SL = svv.pa_slow_length|default(20) %}
  {% set FL = svv.pa_fast_length|default(40) %}
  {% set BL = svv.pa_between_lines|default(5) %}
  {% set MS = svv.pa_move_speed|default(300)*60 %}
  {% set SS = svv.pa_slow_speed|default(20)*60 %}
  {% set FS = svv.pa_fast_speed|default(120)*60 %}
  {% set ZS = svv.pa_z_speed|default(20)*60 %}
  {% set RS = svv.pa_retract_speed|default(35)*60 %}
  {% set RD = svv.pa_retract_dist|default(0.4) %}
  {% set LH = svv.pa_layer_height|default(0.20) %}
  {% set LR = svv.pa_line_ratio|default(1.25) %}
  {% set ER = svv.pa_extrude_ratio|default(1) %}
  {% set BE = svv.pa_bold_extrude|default(1.1)|float %}
  {% set EF = svv.pa_enable_frame|default(1) %}
  {% set EM = svv.pa_enable_markers|default(1) %}
  {% set PV = svv.pa_print_values|default(1) %}
  {% set PH = svv.pa_print_height|default(4) %}
  {% set ML = svv.pa_marker_length|default(BL*2) %}
  {% set DU = svv.pa_draw_underline|default(1) %}
  {% set UO = svv.pa_underline_overlap|default(0.25)|float %}
  {% set PP = svv.pa_precision|default("%.3f") %}

  {% set PX = PH/4 %}
  # calculated variables
  {% if printer.configfile.config['printer']['kinematics'] == 'delta' %}
    {% set X_MID = 0.0|float %}
    {% set Y_MID = 0.0|float %}
  {% else %}
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
    {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
  {% endif %}
  {% set STARTX = X_MID - (((SL*2)+FL)/2) %}
  {% set STARTY = Y_MID - (PA_STEPS * BL / 2.0) %}
  {% set PA_STEP = (PA_STOP - PA_START) / PA_STEPS|float %}
  {% set LINE_WIDTH = NOZZLE * LR|float %}
  {% set ERAT = LINE_WIDTH * LH / ((FD / 2)*(FD / 2) * 3.14159) * ER|float %}

  PRINT_START BED={BED} HOTEND={EXTRUDER} CHAMBER={CHAMBER}
  
  G21 ; millimeter units
  G90 ; absolute XYZ
  M83 ; relative E
  SET_VELOCITY_LIMIT ACCEL={AR} ACCEL_TO_DECEL={DR}
  G92 E0
  M106 S0

  # draw framing lines
  {% if EF == 1 %} ; only frame if enabled
    G1 X{STARTX} Y{STARTY} F{MS}      ; move to start position
    G1 Z{LH} F{ZS}                    ; move to layer height
    G1 E{RD} F{RS}                    ; un-retract
    G1 Y{STARTY+(PA_STEPS*BL)} E{ERAT*(PA_STEPS*BL)*BE} F{SS}; print first frame line
    G1 X{STARTX+LINE_WIDTH}           ; shift over
    G1 Y{STARTY} E{ERAT*(PA_STEPS*BL)*BE} ; print first return frame line
    G1 E-{RD} F{RS}                   ; retract
    G1 X{STARTX+FL+(SL*2)} F{MS}      ; move to second line start
    G1 E{RD} F{RS}                    ; un-retract
    G1 Y{STARTY+(PA_STEPS*BL)} E{ERAT*(PA_STEPS*BL)*BE} F{SS}; print second frame line
    G1 X{STARTX+FL+(SL*2)-LINE_WIDTH} ; shift over
    G1 Y{STARTY} E{ERAT*(PA_STEPS*BL)*BE} ; print second return frame line
    G1 E-{RD} F{RS}                   ; retract
  {% endif %}

  # draw markers
  {% if EM == 1 %} ; only when markers enabled
    G1 X{STARTX+SL+FL} Y{STARTY-ML} F{MS} ; marker 1 start
    G1 E{RD} F{RS}                     ; un-retract
    G1 Y{STARTY} E{ERAT*ML} F{SS}      ; marker 1 end
    G1 E-{RD} F{RS}                    ; retract
    G1 X{STARTX+SL} Y{STARTY-ML} F{MS} ; marker 2 start
    G1 E{RD} F{RS}                     ; un-retract
    G1 Y{STARTY} E{ERAT*ML} F{SS}      ; marker 2 end
    G1 E-{RD} F{RS}                    ; retract
    G1 X{STARTX+SL} Y{STARTY+(PA_STEPS*BL)+ML} F{MS} ; marker 3 start
    G1 E{RD} F{RS}                     ; un-retract
    G1 Y{STARTY+(PA_STEPS*BL)} E{ERAT*ML} F{SS} ; marker 3 end
    G1 E-{RD} F{RS}                    ; retract
    G1 X{STARTX+SL+FL} Y{STARTY+(PA_STEPS*BL)+ML} F{MS} ; marker 4 start
    G1 E{RD} F{RS}                     ; un-retract
    G1 Y{STARTY+(PA_STEPS*BL)} E{ERAT*ML} F{SS} ; marker 4 end
    G1 E-{RD} F{RS}                    ; retract
  {% endif %}

  # draw the actual test lines
  {% for i in range(0, PA_STEPS+1) %}
    {% set PA_VAL = PA_START + (i * PA_STEP) %}
    SET_PRESSURE_ADVANCE ADVANCE={PA_VAL}   ; set Pressure Advance
    M117 PA={PA_VAL}, STEP={PA_STEP}.
    G1 X{STARTX} Y{STARTY+(BL*i)} F{MS}                       ; move to start position
    G1 Z{LH} F{ZS}                                            ; move to layer height
    G1 E{RD} F{RS}                                            ; un-retract
    G1 X{(STARTX+SL)} Y{STARTY+(BL*i)} E{ERAT*SL} F{SS}       ; print line part one
    G1 X{(STARTX+SL+FL)} Y{STARTY+(BL*i)} E{ERAT*FL} F{FS}    ; print line part two
    G1 X{(STARTX+SL+FL+SL)} Y{STARTY+(BL*i)} E{ERAT*SL} F{SS} ; print line part three
    G1 E-{RD} F{RS}                                           ; retract
    G1 Z{LH*2} F{ZS}                                          ; move above layer height    
  {% endfor %}

  # draw pa value labels
  {% if PV == 1 %}
    {% for i in range(0, PA_STEPS+1) %}
      {% if i is divisibleby(((PH+1)/BL)|round(0,'ceil')|int) %}
      {% set PA_VAL = PA_START + (i * PA_STEP) %}
      SET_PRESSURE_ADVANCE ADVANCE={PA_VAL} ; set Pressure Advance
      M117 PA={PA_VAL}, STEP={PA_STEP}
      G1 X{STARTX+FL+(SL*2)+PX} Y{STARTY+(BL*i)} F{MS}          ; move to label position
      {% for a in PP|format(PA_VAL) %}                          ; convert float to string with specified precision
        G1 Z{LH} F{ZS}                                          ; move to layer height
        G91 ; relative positioning
        {% if a == "." %}
          G1 Y-{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 Y{0.5*PX} E{ERAT*(0.5*PX)}
          G1 X{0.5*PX} E{ERAT*(0.5*PX)}
          G1 Y-{0.5*PX} E{ERAT*(0.5*PX)}
          G1 X-{0.5*PX} E{ERAT*(0.5*PX)}
          G1 E-{RD} F{RS}        ; retract
          G1 X{1.5*PX} Y{2*PX} F{MS}
        {% elif a == "0" %}
          G1 Y{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 X{2*PX} E{ERAT*2*PX} F{SS}
          G1 Y-{4*PX} E{ERAT*4*PX}
          G1 X-{2*PX} E{ERAT*2*PX}
          G1 Y{4*PX} E{ERAT*4*PX}
          G1 E-{RD} F{RS}        ; retract
          G1 X{3*PX} Y-{2*PX} F{MS}
        {% elif a == "1" %}
          G1 X{PX} Y{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 Y-{4*PX} E{ERAT*4*PX} F{SS}
          G1 E-{RD} F{RS}        ; retract
          G1 X{2*PX} Y{2*PX} F{MS}
        {% elif a == "2" %}
          G1 Y{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 X{2*PX} E{ERAT*2*PX} F{SS}
          G1 Y-{2*PX} E{ERAT*2*PX}
          G1 X-{2*PX} E{ERAT*2*PX}
          G1 Y-{2*PX} E{ERAT*2*PX}
          G1 X{2*PX} E{ERAT*2*PX}
          G1 E-{RD} F{RS}        ; retract
          G1 X{PX} Y{2*PX} F{MS}
        {% elif a == "3" %}
          G1 Y{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 X{2*PX} E{ERAT*2*PX} F{SS}
          G1 Y-{4*PX} E{ERAT*4*PX}
          G1 X-{2*PX} E{ERAT*2*PX}
          G1 E-{RD} F{RS}        ; retract
          G1 Y{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 X{2*PX} E{ERAT*2*PX} F{SS}
          G1 E-{RD} F{RS}        ; retract
          G1 X{PX} F{MS}
        {% elif a == "4" %}
          G1 Y{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 Y-{2*PX} E{ERAT*2*PX} F{SS}
          G1 X{2*PX} E{ERAT*2*PX}
          G1 Y{2*PX} F{MS}
          G1 Y-{4*PX} E{ERAT*4*PX} F{SS}
          G1 E-{RD} F{RS}        ; retract
          G1 X{PX} Y{2*PX} F{MS}
        {% elif a == "5" %}
          G1 X{2*PX} Y{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 X-{2*PX} E{ERAT*2*PX} F{SS}
          G1 Y-{2*PX} E{ERAT*2*PX}
          G1 X{2*PX} E{ERAT*2*PX}
          G1 Y-{2*PX} E{ERAT*2*PX}
          G1 X-{2*PX} E{ERAT*2*PX}
          G1 E-{RD} F{RS}        ; retract
          G1 X{3*PX} Y{2*PX} F{MS}
        {% elif a == "6" %}
          G1 X{2*PX} Y{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 X-{2*PX} E{ERAT*2*PX} F{SS}
          G1 Y-{4*PX} E{ERAT*4*PX}
          G1 X{2*PX} E{ERAT*2*PX}
          G1 Y{2*PX} E{ERAT*2*PX}
          G1 X-{2*PX} E{ERAT*2*PX}
          G1 E-{RD} F{RS}        ; retract
          G1 X{3*PX} F{MS}
        {% elif a == "7" %}
          G1 E{RD} F{RS}         ; un-retract
          G1 Y{2*PX} E{ERAT*2*PX} F{SS}
          G1 X{2*PX} E{ERAT*2*PX}
          G1 Y-{4*PX} E{ERAT*4*PX}
          G1 E-{RD} F{RS}        ; retract
          G1 X{PX} Y{2*PX} F{MS}
        {% elif a == "8" %}
          G1 E{RD} F{RS}         ; un-retract
          G1 Y{2*PX} E{ERAT*2*PX} F{SS}
          G1 X{2*PX} E{ERAT*2*PX}
          G1 Y-{4*PX} E{ERAT*4*PX}
          G1 X-{2*PX} E{ERAT*2*PX}
          G1 Y{2*PX} E{ERAT*2*PX}
          G1 X{2*PX} E{ERAT*2*PX}
          G1 E-{RD} F{RS}        ; retract
          G1 X{PX} F{MS}
        {% elif a == "9" %}
          G1 X{2*PX} F{MS}
          G1 E{RD} F{RS}         ; un-retract
          G1 X-{2*PX} E{ERAT*2*PX} F{SS}
          G1 Y{2*PX} E{ERAT*2*PX}
          G1 X{2*PX} E{ERAT*2*PX}
          G1 Y-{4*PX} E{ERAT*4*PX}
          G1 X-{2*PX} E{ERAT*2*PX}
          G1 E-{RD} F{RS}        ; retract
          G1 X{3*PX} Y{2*PX} F{MS}
        {% endif %}
        G90                      ; absolute positioning
        G1 Z{LH*2} F{ZS}         ; move above layer height
      {% endfor %}

      {% if DU == 1 %} ; if draw_underline is enabled
        G1 X{STARTX+FL+(SL*2)+(PX*2)+(PP|format(PA_VAL)|length-1)*(PX*3)} Y{STARTY+(BL*i)-(PX*2)-(LINE_WIDTH*(1-UO))} F{MS} ; move to underline position
        G1 Z{LH} F{ZS}           ; move to layer height
        G1 E{RD} F{RS}           ; un-retract
        G1 X{STARTX+FL+(SL*2)} E{ERAT*((PX*2)+(PP|format(PA_VAL)|length-1)*(PX*3))*BE} F{SS} ; draw underline
        {% if i == 0 %} ; connect first underline to the frame
          G1 Y{STARTY} E{ERAT*((PX*2)+(LINE_WIDTH*(1-UO)))*BE} F{SS}
        {% endif %}
        G1 E-{RD} F{RS}          ; retract
      {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}

  PRINT_END

  # these may not work, in which case you will need to count and do the math yourself!
  #M117 New PA = ({PA_START} + (bestLine * {PA_STEP}) )
  M117 Pick your best line and use the printed value.
  {action_respond_info ("Pick your best line and use the printed value.")}

