###############################
###### 	自定义宏脚本       ######
###############################

# 根据XYZ轴的情况判断是否需要进行G28归零
[gcode_macro CG28]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    STATUS_HOMING
    G28
    STATUS_READY
  {% endif %}

# 四轴调平
[gcode_macro G32]
gcode:
    #清除网床
    BED_MESH_CLEAR
    #归零
    CG28
    #四轴调平
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    #重新进行归零，修复QGL造成的误差
    STATUS_HOMING
    G28
    STATUS_READY

# 重置挤出机
[gcode_macro RESET_EXTRUDER]
gcode:
    G92 E0

[gcode_macro PRINT_START]
# 在切片软件的开始G-CODE填入
# CURA:  PRINT_START BED={material_bed_temperature_layer_0} HOTEND={material_print_temperature_layer_0} CHAMBER={build_volume_temperature} MATERIAL={material_type}
# SuperSlicer:  PRINT_START BED=[first_layer_bed_temperature] HOTEND={first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} CHAMBER=[chamber_temperature]
gcode:
    # 打开顶部照明灯
    LIGHT_ON
    # 开启驱动冷却风扇
    SET_FAN_SPEED FAN=controller_fan SPEED=0.6
    # 获取变量
    {% set BED_TEMP = params.BED|int %}
    {% set HOTEND_TEMP = params.HOTEND|int %}
    {% set CHAMBERD_TEMP = params.CHAMBER|default(0)|int %}
    {% set MATERIAL_TYPE = params.MATERIAL|default("PLA")|string %}
    # 设置logo灯颜色
    STATUS_HEATING
    # 设置顶部灯光颜色
    LIGHT_RED
    # 设置目标温度
    M140 S{BED_TEMP}
    #M104 S{HOTEND_TEMP}
    # 如果没有归零则执行归零
    CG28
    # 等待热床到达指定温度
    M190 S{BED_TEMP}
    # 如果需要仓温则进行指定操作
    {% if CHAMBERD_TEMP > 0 %}
    M117 Heatsoaking...
    # 模型散热风扇开到最大，辅助空气循环
    M106 S255
    # 开启内循环
    #Nevermore_on
    # 等待仓温到达指定温度
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={CHAMBERD_TEMP}
    # 关闭模型散热风扇
    M107
    {% endif %}
    # 设置顶部灯光颜色
    LIGHT_WHITE
    # 如果没有做4Z调平执行指定操作
    #{% if not printer.quad_gantry_level.applied %}
    # 设置logo灯颜色
    STATUS_LEVELING
    M117 Quad Gantry Leveling...
    # 4轴调平
    G32
    #{% endif %}
    # 设置logo灯颜色
    #STATUS_CLEANING
    # 清理喷嘴
    #CLEAN_NOZZLE
    # 自动Z偏移
    #STATUS_CALIBRATING_Z
    #M117 Calibrating Z Offset...
    #CALIBRATE_Z
    # 手动指定Z偏移，值越小越靠近床
    SET_GCODE_OFFSET Z=2.3  #PEI钢板
    #SET_GCODE_OFFSET Z=2.2  #裸钢板
    # 根据耗材设置微调Z偏移
    #SET_GCODE_OFFSET Z_ADJUST={params.Z_ADJUST|default(0.0)|float} MOVE=1
    # 根据耗材调整PA值
    #MATERIAL_PA MATERIAL={MATERIAL_TYPE}
    # 探测网床
    #STATUS_MESHING
    #M117 Calibrating Bed Mesh...
    #BED_MESH_CALIBRATE
    # 加载网床
    BED_MESH_PROFILE LOAD={BED_TEMP}
    #BED_MESH_PROFILE LOAD=cold
    # 等待热端到达指定温度
    STATUS_HEATING
    M109 S{HOTEND_TEMP}
    # 打印测试线
    PURGE_LINE
    # 重置挤出机
    RESET_EXTRUDER
    # 设置logo灯颜色
    STATUS_PRINTING
    M117 Printing...


[gcode_macro PRINT_END]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    # 等待缓存清空
    M400
    # 重置挤出机
    RESET_EXTRUDER
    # 回抽
    G1 E-5.0 F1800
    # 关闭喷头加热
    TURN_OFF_HEATERS
    # 切换到相对于原点的坐标系
    G90
    # 抬高喷嘴避免烫坏打印件
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000
    # 停到指定位置
    G0 X{th.axis_maximum.x - 2} Y{th.axis_maximum.y - 2} Z{th.position.z + 50 if th.position.z < 100 else z_safe} F3600
    # 清除网床
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    # 关闭步进电机
    M84
    # 关闭风扇
    M107
    # 关闭内循环
    #Nevermore_off
    # 打印消息
    M117


[gcode_macro PURGE_LINE]
# 在热床左边打印一条线，让挤出机做好准备
gcode:
    # 移动到开始位置
    G1 X3 Y20 Z0.5 F6000
    # 重置挤出机
    RESET_EXTRUDER
    # 挤出一定量的耗材排空气
    G1 E20 F150
    # 重置挤出机
    RESET_EXTRUDER
    # 画线
    G1 X3 Y200 Z0.25 F1500 E10
    # 抬高喷嘴
    G1 Z2.0 F3000


# 根据耗材切换PA值
[gcode_macro MATERIAL_PA]
gcode:
    {% set material = params.MATERIAL|default("PLA")|string %}
    {% if material == "ABS" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.055
        SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    {% elif material == "ASA" %}
        SET_PRESSURE_ADVANCE ADVANCE=0.045
        SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    {% elif material == "PLA" %}
        #SET_PRESSURE_ADVANCE ADVANCE=0.0425
        SET_RETRACTION RETRACT_LENGTH=0.4 RETRACT_SPEED=40 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=30
    {% elif material == "PET" %}
        #SET_PRESSURE_ADVANCE ADVANCE=0.0550
        SET_RETRACTION RETRACT_LENGTH=0.6 RETRACT_SPEED=30 UNRETRACT_EXTRA_LENGTH=0 UNRETRACT_SPEED=20
     {% endif %}

# 打印头停到前面
[gcode_macro PARKFRONT]
gcode:
  {% if printer.idle_timeout.state != "Printing" %}
    CG28
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90
    G1 Z100 X175 Y30 F5000
    RESTORE_GCODE_STATE NAME=PARKFRONT
  {% else %}
    { action_respond_info("PARKFRONT disabled while printing!") }
  {% endif %}


# 打印对象排除 (aka Marlin/RRF M486 commands)
# 对象预处理下载 https://github.com/kageurufu/cancelobject-preprocessor/releases
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}


### 备份配置文件到GitHub
# 参考文档 https://github.com/th33xitus/kiauh/wiki/How-to-autocommit-config-changes-to-github%3F
[gcode_shell_command backup_cfg]
command: sh ~/klipper_config/scripts/git_backup.sh
timeout: 120.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg
